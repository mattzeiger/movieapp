Closer Competition: 
	http://www.themoviedb.org/apps
	Can I Stream It
	Instant Watcher
	Flixster
	FeedFliks
	NextGuide
	Yidio
	Fanhattan
	Instant Watch Browser for Netflix

Distant Competition:
	Fan TV	(Device only for TWC)

Ideas:
	//movie award nominations....
	//http://trakt.tv/ integration

//get C++ talking to MySQL
---------------------------------------------------------------------------------------------------------
//Find URL's to crawl/ scrape
//New Content discovery!!
	//for each source
		//scrape it
				//go through category pages
				// go through related links, YMAL links
				// go through sitemap etc.
				//queue up movie url's (that source's movie id's)
				
		//go through queue of movie url's
	 		//access through source's API?
			//attempt to match title and year to existing movie record
				//if not, then insert a record, parsing what we can from the source, and flag for metadata-retrieval
	
//go through items flagged for metadata-retrieval
	//use wikipedia to grab meta data:
		http://www.mediawiki.org/wiki/API:Main_page
		http://en.wikipedia.org/w/api.php?format=json&action=query&titles=The%20Choice%20(film)&prop=revisions&rvprop=content&continue=
	//use themoviedb.org to grab meta data:
		http://www.themoviedb.org/faq/api
		
	//parse google to grab meta data
		https://developers.google.com/custom-search/json-api/v1/introduction

---------------------------------------------------------------------------------------------------------
Amazon:
	//need to crawl service, not just search/api a given title...
	
	http://www.amazon.com/Prime-Instant-Video/b/?node=2676882011

		view-source:http://www.amazon.com/gp/product/B0094LB5IC

		"isPrime":true
		
---------------------------------------------------------------------------------------------------------
iTunes:	
	//find way to crawl service, not just search the api....
	
//	
http://ax.itunes.apple.com/WebObjects/MZStoreServices.woa/wa/wsSearch?term=fury&media=movie&limit=1
	--Note that this limits it to 1
	--If you don't limit it, you'll receive results that may or may not be helpful (for example, "Annie" might show both movies across both years)
		--you'll have to do year-matching yourself
	--https://www.apple.com/itunes/affiliates/resources/documentation/itunes-store-web-service-search-api.html

---------------------------------------------------------------------------------------------------------
Netflix:
	//find way to crawl service

---------------------------------------------------------------------------------------------------------
Crackle:
	//find way to crawl service
---------------------------------------------------------------------------------------------------------
Hulu:
	//find way to crawl service


	http://www.hulu.com/sitemap
	
	http://mozart.hulu.com/v1.h2o/recommended/upnext?dp_identifier=hulu&exclude_same_game=0&exclude_same_movie=0&mode=default&show_id=8749&video_id=676792&video_type=feature_film&_language=en&_region=us&items_per_page=32&position=0&_user_pgid=1&_content_pgid=5059&_device_id=1&region=us&locale=en&language=en
	
---------------------------------------------------------------------------------------------------------
Data Model:
	[movie]
	id
	title
	alt_title			[zombies aah!]
	year				
	mpaa				[0=NR,1=G,2=PG,3=PG-13,4=R,5=NC-17]
	description
	genre_primary
	director_id
	duration				[120]
	studio
	budget	
	release_date
	box_office
	
		
	[moviesource]
	id
	movie_id			[123]
	source 				[amazon,itunes,hbo,netflix,crackle,hulu]
	source_id			[B0094LB5IC]
	free				[1/0]	--denotes if it is truly free
	subscription_free 	[1/0]	--denotes free with subscription (i.e. hulu + or Netflix)
	rental_price		[2.99]
	purchase_price		[9.99]
	rental_price_hd		[2.99]
	purchase_price_hd	[9.99]
	cc					[1/0]
	coming_soon			[1/0]
	
	
	[moviegenres]
	id
	movie_id
	genre_id
	moviesource_id
	
	[genres]
	id
	name	
	
	[movietalent]
	id
	movie_id
	talent_id
	director		[0]
	actor			[1]
	writer			[0]
	producer		[0]
	exec_producer	[0]
	starring		[1]
	
	[talent]
	id
	name
	
	